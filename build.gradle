buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        maven { url 'https://jitpack.io/'}
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

group 'fr.flowarg'
archivesBaseName = 'vipium'
version '1.3.2'

compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
    options.encoding 'UTF-8'
}

minecraft {
    mappings channel: 'snapshot', version: '20201105-1.15.1'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                vipium {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                viupium {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'vipium', '--all', '--output', file('src/generated/resources/')

            mods {
                vipium {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io/'}
}

configurations {
    clientShade
    serverShade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.45'
    serverShade ('net.dv8tion:JDA:4.2.0_214') {
        exclude module: 'opus-java'
    }
    serverShade 'org.slf4j:slf4j-simple:1.7.25'
    clientShade 'club.minnced:java-discord-rpc:2.0.2'
    compileOnly ('net.dv8tion:JDA:4.2.0_214') {
        exclude module: 'opus-java'
    }
    compileOnly 'org.slf4j:slf4j-simple:1.7.25'
    compileOnly 'club.minnced:java-discord-rpc:2.0.2'
}

jar {
    exclude 'homesexample.json'
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Vendor": "FlowArg",
                "Specification-Version": project.version,
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"FlowArg",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task serverJar(type: ShadowJar) {
    configurations = [project.configurations.serverShade]
    classifier 'server'
    relocate 'gnu.trove', 'libraries.gnu.trove'
    relocate 'org.apache.commons.collections4', 'libraries.org.apache.commons.collections4'
}

task clientJar(type: ShadowJar) {
    configurations = [project.configurations.clientShade]
    classifier 'client'
}


jar.finalizedBy('reobfJar')
